{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","console","log","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","AddTodo","onCreate","useState","value","setValue","onSubmit","event","preventDefault","trim","target","App","setTodos","Provider","filter","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJAIeA,EAFCC,IAAMC,gB,OCEhBC,EAAS,CACdC,GAAI,CACHC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,WACTC,OAAQ,iBACRC,aAAc,MACdC,aAAc,QAEfC,MAAO,CACNC,YAAa,SAqCAC,MAjCf,YAA8C,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAChCC,QAAQC,IAAI,OAAQJ,GAEpB,IAAQK,EAAeC,qBAAWrB,GAA1BoB,WACFE,EAAU,GAMhB,OAJIP,EAAKQ,WACRD,EAAQE,KAAK,QAIb,qBAAIC,MAAOtB,EAAOC,GAAlB,UACC,uBAAMsB,UAAWJ,EAAQK,KAAK,KAA9B,UACC,uBAAOF,MAAOtB,EAAOS,MACjBgB,KAAK,WACLC,QAASd,EAAKQ,UACdN,SAAU,kBAAMA,EAASF,EAAKe,OAClC,iCAASd,EAAQ,IALlB,OAOED,EAAKgB,SAGP,wBAAQL,UAAU,KAAKM,QAASZ,EAAWa,KAAK,KAAMlB,EAAKe,IAA3D,mBCrCG3B,EAAS,CACd+B,GAAI,CACHC,UAAW,OACX3B,QAAS,EACT4B,OAAQ,IAmBKC,MAff,SAAkBC,GACjB,OACC,oBAAIb,MAAOtB,EAAO+B,GAAlB,SACGI,EAAMC,MAAMC,KAAI,SAACzB,EAAMC,GACxB,OAAO,cAAC,EAAD,CAAUD,KAAMA,EAAoBC,MAAOA,EAAOC,SAAUqB,EAAMG,UAAvC1B,EAAKe,UCW5BY,MAxBf,YAAgC,IAAbC,EAAY,EAAZA,SAClB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OACC,uBAAMrB,MAAO,CAACd,aAAc,QAASoC,SAVtC,SAAuBC,GACtBA,EAAMC,iBAEHJ,EAAMK,SACRP,EAASE,GACTC,EAAS,MAKV,UACC,uBAAOD,MAAOA,EAAO5B,SAAU,SAAC+B,GAAD,OAAWF,EAASE,EAAMG,OAAON,UAChE,wBAAQjB,KAAM,SAAd,0BCkCYwB,MA/Cf,WACC,MAA4BnD,IAAM2C,SACjC,CACC,CAAEd,GAAI,EAAIP,WAAW,EAAMQ,MAAO,iEAClC,CAAED,GAAI,EAAIP,WAAW,EAAOQ,MAAO,uEACnC,CAAED,GAAI,EAAIP,WAAW,EAAOQ,MAAO,+EAJrC,mBAAQQ,EAAR,KAAec,EAAf,KA+BA,OACC,cAAC,EAAQC,SAAT,CAAkBT,MAAO,CAAEzB,WAb5B,SAAoBU,GACnBuB,EAASd,EAAMgB,QAAO,SAACxC,GAAD,OAAUA,EAAKe,KAAOA,QAY5C,SACC,sBAAKJ,UAAW,UAAhB,UACC,gDACA,cAAC,EAAD,CAASiB,SAZZ,SAAiBZ,GAChBsB,EAASd,EAAMiB,OAAO,CAAC,CACtBzB,QACAD,GAAI2B,KAAKC,MACTnC,WAAW,SASTgB,EAAMoB,OACN,cAAC,EAAD,CAAUpB,MAAOA,EAAOE,SA7B5B,SAAoBX,GACnBuB,EACCd,EAAMC,KAAI,SAACzB,GAIV,OAHIA,EAAKe,KAAOA,IACff,EAAKQ,WAAaR,EAAKQ,WAEjBR,SAyBN,gDCjCU6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a7fe829f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React, {useContext} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from \"../context\";\r\n\r\nconst styles = {\r\n\tli: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '20px 4px',\r\n\t\tborder: '1px solid gray',\r\n\t\tborderRadius: '4px',\r\n\t\tmarginBottom: '20px',\r\n\t},\r\n\tinput: {\r\n\t\tmarginRight: '10px'\r\n\t}\r\n}\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n\tconsole.log('todo', todo);\r\n\r\n\tconst { removeTodo } = useContext(Context);\r\n\tconst classes = [];\r\n\r\n\tif (todo.completed) {\r\n\t\tclasses.push('done');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li style={styles.li}>\r\n\t\t\t<span className={classes.join(' ')}>\r\n\t\t\t\t<input style={styles.input}\r\n\t\t\t\t\t\t\t type='checkbox'\r\n\t\t\t\t\t\t\t checked={todo.completed}\r\n\t\t\t\t\t\t\t onChange={() => onChange(todo.id)} />\r\n\t\t\t\t<strong>{index + 1}</strong>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t{todo.title}\r\n\t\t\t</span>\r\n\r\n\t\t\t<button className='rm' onClick={removeTodo.bind(null, todo.id)}>x</button>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nTodoItem.propTypes = {\r\n\ttodo: PropTypes.object.isRequired,\r\n\tindex: PropTypes.number,\r\n\tonChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoItem","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst styles = {\r\n\tul: {\r\n\t\tlistStyle: 'none',\r\n\t\tpadding: 0,\r\n\t\tmargin: 0\r\n\t}\r\n}\r\n\r\nfunction TodoList(props) {\r\n\treturn (\r\n\t\t<ul style={styles.ul}>\r\n\t\t\t{ props.todos.map((todo, index) => {\r\n\t\t\t\treturn <TodoItem todo={todo} key={todo.id} index={index} onChange={props.onToggle}/>\r\n\t\t\t}) }\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nTodoList.propTypes = {\r\n\ttodos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\tonToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AddTodo({ onCreate }) {\r\n\tconst [value, setValue] = useState('');\r\n\r\n\tfunction submitHandler(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif(value.trim()) {\r\n\t\t\tonCreate(value);\r\n\t\t\tsetValue('');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form style={{marginBottom: '20px'}} onSubmit={submitHandler}>\r\n\t\t\t<input value={value} onChange={(event) => setValue(event.target.value)} />\r\n\t\t\t<button type={'submit'}>Add todo</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddTodo.propTypes = {\r\n\tonCreate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddTodo;","import React from 'react';\nimport TodoList from './Todo/TodoList';\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\";\n\nfunction App() {\n\tconst [ todos, setTodos ] = React.useState(\n\t\t[\n\t\t\t{ id: 1,  completed: true, title: 'Купить хлеб' },\n\t\t\t{ id: 2,  completed: false, title: 'Купить масло' },\n\t\t\t{ id: 3,  completed: false, title: 'Купить молоко' },\n\t\t]\n\t);\n\n\tfunction toggleTodo(id) {\n\t\tsetTodos(\n\t\t\ttodos.map((todo) => {\n\t\t\t\tif (todo.id === id) {\n\t\t\t\t\ttodo.completed = !todo.completed;\n\t\t\t\t}\n\t\t\t\treturn todo;\n\t\t\t})\n\t\t)\n\t}\n\n\tfunction removeTodo(id) {\n\t\tsetTodos(todos.filter((todo) => todo.id !== id));\n\t}\n\n\tfunction addTodo(title) {\n\t\tsetTodos(todos.concat([{\n\t\t\ttitle,\n\t\t\tid: Date.now(),\n\t\t\tcompleted: false,\n\t\t}]))\n\t}\n\n\treturn (\n\t\t<Context.Provider value={{ removeTodo }}>\n\t\t\t<div className={'wrapper'}>\n\t\t\t\t<h1>React tutorial</h1>\n\t\t\t\t<AddTodo onCreate={addTodo} />\n\t\t\t\t{todos.length ? (\n\t\t\t\t\t<TodoList todos={todos} onToggle={toggleTodo} />\n\t\t\t\t) : (\n\t\t\t\t\t<p>No todos!</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Context.Provider>\n\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}